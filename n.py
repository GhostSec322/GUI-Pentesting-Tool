import requests

# 특수문자와 SQL 예약어 테스트 목록
TEST_INPUTS = [
    "'",
    '"',
    "=",
    "&",
    "|",
    "!",
    "(",
    ")",
    "{",
    "}",
    "$",
    "%",
    "@",
    "-1",
    "UNION",
    "SELECT",
    "THEN",
    "IF",
    "INSTANCE",
    "END",
    "COLUMN",
]


def test_sql_structure_change(url):
    """
    입력된 URL에 특수문자와 예약어를 테스트하는 함수
    :param url: 테스트할 URL
    :return: 쿼리 구조 변경 여부
    """
    structure_changed = False
    for test_input in TEST_INPUTS:
        # 테스트 값을 URL에 삽입
        test_url = url + test_input
        print(test_url)
        try:
            response = requests.get(test_url)
            if response.status_code == 200:
                # 서버 응답에서 SQL 쿼리 오류나 비정상 응답 감지
                if (
                    "SQL" in response.text
                    or "syntax" in response.text
                    or "error" in response.text
                ):
                    print(
                        f"[취약] 입력값 '{test_input}'이 쿼리 구조에 영향을 미침: {test_url}"
                    )
                    structure_changed = True
            else:
                print(
                    f"[응답 오류] {response.status_code} 상태 코드 반환됨: {test_url}"
                )
        except requests.exceptions.RequestException as e:
            print(f"[오류] 요청 실패: {e}")
    return structure_changed


def scan_url():
    """
    사용자로부터 URL을 입력받아 쿼리 구조 변경 테스트 실행
    """
    url = input("테스트할 웹 애플리케이션의 URL을 입력하세요 (매개변수 포함): ")
    if not url.startswith("http"):
        print("유효한 URL을 입력하세요.")
        return

    print(f"쿼리 구조 변경 테스트를 {url}에 대해 실행합니다...")
    if test_sql_structure_change(url):
        print(
            "입력값이 쿼리 구조에 영향을 주었습니다. 필터링 또는 방어 기능이 부족할 수 있습니다."
        )
    else:
        print("쿼리 구조 변경이 감지되지 않았습니다.")


if __name__ == "__main__":
    scan_url()
